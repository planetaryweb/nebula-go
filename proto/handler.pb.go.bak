// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handler.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type FormValue struct {
	// Types that are valid to be assigned to Value:
	//	*FormValue_StringVal
	//	*FormValue_BytesVal
	Value                isFormValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FormValue) Reset()         { *m = FormValue{} }
func (m *FormValue) String() string { return proto.CompactTextString(m) }
func (*FormValue) ProtoMessage()    {}
func (*FormValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{2}
}

func (m *FormValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormValue.Unmarshal(m, b)
}
func (m *FormValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormValue.Marshal(b, m, deterministic)
}
func (m *FormValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormValue.Merge(m, src)
}
func (m *FormValue) XXX_Size() int {
	return xxx_messageInfo_FormValue.Size(m)
}
func (m *FormValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FormValue.DiscardUnknown(m)
}

var xxx_messageInfo_FormValue proto.InternalMessageInfo

type isFormValue_Value interface {
	isFormValue_Value()
}

type FormValue_StringVal struct {
	StringVal string `protobuf:"bytes,1,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type FormValue_BytesVal struct {
	BytesVal []byte `protobuf:"bytes,2,opt,name=bytes_val,json=bytesVal,proto3,oneof"`
}

func (*FormValue_StringVal) isFormValue_Value() {}

func (*FormValue_BytesVal) isFormValue_Value() {}

func (m *FormValue) GetValue() isFormValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FormValue) GetStringVal() string {
	if x, ok := m.GetValue().(*FormValue_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (m *FormValue) GetBytesVal() []byte {
	if x, ok := m.GetValue().(*FormValue_BytesVal); ok {
		return x.BytesVal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FormValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FormValue_StringVal)(nil),
		(*FormValue_BytesVal)(nil),
	}
}

type FormValues struct {
	Values               []*FormValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FormValues) Reset()         { *m = FormValues{} }
func (m *FormValues) String() string { return proto.CompactTextString(m) }
func (*FormValues) ProtoMessage()    {}
func (*FormValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{3}
}

func (m *FormValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormValues.Unmarshal(m, b)
}
func (m *FormValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormValues.Marshal(b, m, deterministic)
}
func (m *FormValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormValues.Merge(m, src)
}
func (m *FormValues) XXX_Size() int {
	return xxx_messageInfo_FormValues.Size(m)
}
func (m *FormValues) XXX_DiscardUnknown() {
	xxx_messageInfo_FormValues.DiscardUnknown(m)
}

var xxx_messageInfo_FormValues proto.InternalMessageInfo

func (m *FormValues) GetValues() []*FormValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type HandleResult struct {
	// Types that are valid to be assigned to Result:
	//	*HandleResult_Error
	//	*HandleResult_Response
	Result               isHandleResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HandleResult) Reset()         { *m = HandleResult{} }
func (m *HandleResult) String() string { return proto.CompactTextString(m) }
func (*HandleResult) ProtoMessage()    {}
func (*HandleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{4}
}

func (m *HandleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleResult.Unmarshal(m, b)
}
func (m *HandleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleResult.Marshal(b, m, deterministic)
}
func (m *HandleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleResult.Merge(m, src)
}
func (m *HandleResult) XXX_Size() int {
	return xxx_messageInfo_HandleResult.Size(m)
}
func (m *HandleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleResult.DiscardUnknown(m)
}

var xxx_messageInfo_HandleResult proto.InternalMessageInfo

type isHandleResult_Result interface {
	isHandleResult_Result()
}

type HandleResult_Error struct {
	Error *HTTPError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type HandleResult_Response struct {
	Response *HTTPResponse `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

func (*HandleResult_Error) isHandleResult_Result() {}

func (*HandleResult_Response) isHandleResult_Result() {}

func (m *HandleResult) GetResult() isHandleResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *HandleResult) GetError() *HTTPError {
	if x, ok := m.GetResult().(*HandleResult_Error); ok {
		return x.Error
	}
	return nil
}

func (m *HandleResult) GetResponse() *HTTPResponse {
	if x, ok := m.GetResult().(*HandleResult_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HandleResult) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HandleResult_Error)(nil),
		(*HandleResult_Response)(nil),
	}
}

type HandlerName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandlerName) Reset()         { *m = HandlerName{} }
func (m *HandlerName) String() string { return proto.CompactTextString(m) }
func (*HandlerName) ProtoMessage()    {}
func (*HandlerName) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{5}
}

func (m *HandlerName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandlerName.Unmarshal(m, b)
}
func (m *HandlerName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandlerName.Marshal(b, m, deterministic)
}
func (m *HandlerName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandlerName.Merge(m, src)
}
func (m *HandlerName) XXX_Size() int {
	return xxx_messageInfo_HandlerName.Size(m)
}
func (m *HandlerName) XXX_DiscardUnknown() {
	xxx_messageInfo_HandlerName.DiscardUnknown(m)
}

var xxx_messageInfo_HandlerName proto.InternalMessageInfo

func (m *HandlerName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HTTPError struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPError) Reset()         { *m = HTTPError{} }
func (m *HTTPError) String() string { return proto.CompactTextString(m) }
func (*HTTPError) ProtoMessage()    {}
func (*HTTPError) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{6}
}

func (m *HTTPError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPError.Unmarshal(m, b)
}
func (m *HTTPError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPError.Marshal(b, m, deterministic)
}
func (m *HTTPError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPError.Merge(m, src)
}
func (m *HTTPError) XXX_Size() int {
	return xxx_messageInfo_HTTPError.Size(m)
}
func (m *HTTPError) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPError.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPError proto.InternalMessageInfo

func (m *HTTPError) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HTTPError) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HTTPRequest struct {
	Form                 map[string]*FormValues `protobuf:"bytes,3,rep,name=form,proto3" json:"form,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Method               string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HTTPRequest) Reset()         { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()    {}
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{7}
}

func (m *HTTPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPRequest.Unmarshal(m, b)
}
func (m *HTTPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPRequest.Marshal(b, m, deterministic)
}
func (m *HTTPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPRequest.Merge(m, src)
}
func (m *HTTPRequest) XXX_Size() int {
	return xxx_messageInfo_HTTPRequest.Size(m)
}
func (m *HTTPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPRequest proto.InternalMessageInfo

func (m *HTTPRequest) GetForm() map[string]*FormValues {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *HTTPRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HTTPRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type HTTPResponse struct {
	Status               uint32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Body                 []byte            `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Headers              map[string]string `protobuf:"bytes,16,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HTTPResponse) Reset()         { *m = HTTPResponse{} }
func (m *HTTPResponse) String() string { return proto.CompactTextString(m) }
func (*HTTPResponse) ProtoMessage()    {}
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{8}
}

func (m *HTTPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPResponse.Unmarshal(m, b)
}
func (m *HTTPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPResponse.Marshal(b, m, deterministic)
}
func (m *HTTPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPResponse.Merge(m, src)
}
func (m *HTTPResponse) XXX_Size() int {
	return xxx_messageInfo_HTTPResponse.Size(m)
}
func (m *HTTPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPResponse proto.InternalMessageInfo

func (m *HTTPResponse) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HTTPResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *HTTPResponse) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type WillHandle struct {
	Handle               bool     `protobuf:"varint,1,opt,name=handle,proto3" json:"handle,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WillHandle) Reset()         { *m = WillHandle{} }
func (m *WillHandle) String() string { return proto.CompactTextString(m) }
func (*WillHandle) ProtoMessage()    {}
func (*WillHandle) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{9}
}

func (m *WillHandle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WillHandle.Unmarshal(m, b)
}
func (m *WillHandle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WillHandle.Marshal(b, m, deterministic)
}
func (m *WillHandle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WillHandle.Merge(m, src)
}
func (m *WillHandle) XXX_Size() int {
	return xxx_messageInfo_WillHandle.Size(m)
}
func (m *WillHandle) XXX_DiscardUnknown() {
	xxx_messageInfo_WillHandle.DiscardUnknown(m)
}

var xxx_messageInfo_WillHandle proto.InternalMessageInfo

func (m *WillHandle) GetHandle() bool {
	if m != nil {
		return m.Handle
	}
	return false
}

func (m *WillHandle) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*Error)(nil), "proto.Error")
	proto.RegisterType((*FormValue)(nil), "proto.FormValue")
	proto.RegisterType((*FormValues)(nil), "proto.FormValues")
	proto.RegisterType((*HandleResult)(nil), "proto.HandleResult")
	proto.RegisterType((*HandlerName)(nil), "proto.HandlerName")
	proto.RegisterType((*HTTPError)(nil), "proto.HTTPError")
	proto.RegisterType((*HTTPRequest)(nil), "proto.HTTPRequest")
	proto.RegisterMapType((map[string]*FormValues)(nil), "proto.HTTPRequest.FormEntry")
	proto.RegisterType((*HTTPResponse)(nil), "proto.HTTPResponse")
	proto.RegisterMapType((map[string]string)(nil), "proto.HTTPResponse.HeadersEntry")
	proto.RegisterType((*WillHandle)(nil), "proto.WillHandle")
}

func init() { proto.RegisterFile("handler.proto", fileDescriptor_515968b8e1a22554) }

var fileDescriptor_515968b8e1a22554 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x4d, 0xda, 0x26, 0x4d, 0xa6, 0x59, 0xa9, 0x18, 0x84, 0x4a, 0x01, 0x51, 0x7c, 0x21, 0xa7,
	0x0a, 0xba, 0xe2, 0x43, 0xbd, 0xb1, 0x52, 0x51, 0x84, 0x04, 0x42, 0xa6, 0x2a, 0xc7, 0x55, 0xaa,
	0x98, 0x76, 0xb5, 0x4e, 0x52, 0x6c, 0x67, 0x51, 0xfe, 0x16, 0x12, 0xff, 0x0f, 0x65, 0xec, 0xb4,
	0x01, 0x16, 0x4e, 0xb1, 0x67, 0xde, 0x78, 0xde, 0xbc, 0x37, 0x81, 0xb3, 0x7d, 0x5a, 0x64, 0x82,
	0xcb, 0xf9, 0x41, 0x96, 0xba, 0x24, 0x1e, 0x7e, 0xe8, 0x10, 0xbc, 0x55, 0x7e, 0xd0, 0x35, 0x7d,
	0x00, 0xde, 0x4a, 0xca, 0x52, 0x92, 0x31, 0xf4, 0x73, 0xb5, 0x9b, 0xb8, 0x33, 0x37, 0x0e, 0x59,
	0x73, 0xa4, 0x6b, 0x08, 0xdf, 0x95, 0x32, 0xdf, 0xa4, 0xa2, 0xe2, 0xe4, 0x09, 0x80, 0xd2, 0xf2,
	0xaa, 0xd8, 0x5d, 0xde, 0xa4, 0xc2, 0xa0, 0x12, 0x87, 0x85, 0x26, 0xb6, 0x49, 0x05, 0x79, 0x0c,
	0xe1, 0xb6, 0xd6, 0x5c, 0x61, 0xbe, 0x37, 0x73, 0xe3, 0x28, 0x71, 0x58, 0x80, 0xa1, 0x4d, 0x2a,
	0x2e, 0x86, 0xe0, 0xdd, 0x34, 0x0f, 0xd1, 0x57, 0x00, 0xc7, 0x57, 0x15, 0x89, 0xc1, 0xc7, 0xb0,
	0x9a, 0xb8, 0xb3, 0x7e, 0x3c, 0x5a, 0x8c, 0x0d, 0xcd, 0xf9, 0x11, 0xc2, 0x6c, 0x9e, 0x56, 0x10,
	0x25, 0x38, 0x09, 0xe3, 0xaa, 0x12, 0x9a, 0xc4, 0xe0, 0xf1, 0x86, 0x38, 0x72, 0x39, 0x15, 0x26,
	0xeb, 0xf5, 0x27, 0x1c, 0x28, 0x71, 0x98, 0x01, 0x90, 0x17, 0x10, 0x48, 0xae, 0x0e, 0x65, 0xa1,
	0x38, 0x12, 0x1b, 0x2d, 0xee, 0x76, 0xc0, 0xcc, 0xa6, 0x1a, 0xb6, 0x2d, 0xec, 0x22, 0x00, 0x5f,
	0x62, 0x1b, 0xfa, 0x14, 0x46, 0xa6, 0xad, 0xfc, 0x98, 0xe6, 0x9c, 0x10, 0x18, 0x14, 0x69, 0xce,
	0xad, 0x4c, 0x78, 0xa6, 0x2f, 0x21, 0x3c, 0x76, 0x25, 0xf7, 0xc1, 0x57, 0x3a, 0xd5, 0x95, 0x42,
	0xc8, 0x19, 0xb3, 0xb7, 0x56, 0xde, 0xde, 0x49, 0xde, 0x9f, 0x2e, 0x8c, 0x0c, 0x81, 0x6f, 0x15,
	0x57, 0x9a, 0x3c, 0x87, 0xc1, 0xd7, 0x52, 0xe6, 0x93, 0x3e, 0x0a, 0xf1, 0xe8, 0x37, 0x8a, 0x88,
	0x40, 0x51, 0x56, 0x85, 0x96, 0x35, 0x43, 0x64, 0xd3, 0x2b, 0xe7, 0x7a, 0x5f, 0x66, 0x96, 0x8e,
	0xbd, 0x35, 0xbd, 0x2a, 0x29, 0xda, 0x5e, 0x95, 0x14, 0xd3, 0xf7, 0xc6, 0x4a, 0x2c, 0x6e, 0xd2,
	0xd7, 0xbc, 0x6e, 0x9d, 0xbe, 0xe6, 0x35, 0x79, 0x66, 0xcd, 0xb1, 0xf2, 0xdc, 0xf9, 0xd3, 0x04,
	0xc5, 0x4c, 0x7e, 0xd9, 0x7b, 0xe3, 0xd2, 0x1f, 0x2e, 0x44, 0x5d, 0xe1, 0xfe, 0x39, 0x32, 0x81,
	0xc1, 0xb6, 0xcc, 0x6a, 0xb3, 0x0c, 0x0c, 0xcf, 0x64, 0x09, 0xc3, 0x3d, 0x4f, 0x33, 0x2e, 0xd5,
	0x64, 0x8c, 0x73, 0xce, 0x6e, 0xb1, 0x62, 0x9e, 0x18, 0x88, 0x99, 0xb5, 0x2d, 0x98, 0x2e, 0x21,
	0xea, 0x26, 0x6e, 0x99, 0xe3, 0x5e, 0x77, 0x8e, 0xb0, 0x4b, 0xfa, 0x2d, 0xc0, 0x97, 0x2b, 0x21,
	0x8c, 0x95, 0x0d, 0x63, 0xf3, 0x57, 0x60, 0x71, 0xc0, 0xec, 0x8d, 0x3c, 0x84, 0x10, 0x57, 0xe6,
	0xf2, 0x64, 0x55, 0x80, 0x81, 0x0f, 0x6a, 0xb7, 0xf8, 0x0e, 0x43, 0xbb, 0x09, 0xe4, 0x1c, 0x7c,
	0xfb, 0x12, 0xf9, 0xdb, 0xa6, 0xe9, 0x71, 0xbb, 0x3a, 0xeb, 0x4a, 0x1d, 0xf2, 0x1a, 0xa2, 0xcf,
	0xfb, 0xb2, 0x12, 0xd9, 0x7f, 0x4a, 0x5b, 0xe5, 0x4f, 0x5c, 0xa9, 0xb3, 0xf5, 0x31, 0x76, 0xfe,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0xda, 0xee, 0x1a, 0x6b, 0xca, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HandlerClient is the client API for Handler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandlerClient interface {
	Handle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*HandleResult, error)
	ShouldHandle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*WillHandle, error)
}

type handlerClient struct {
	cc *grpc.ClientConn
}

func NewHandlerClient(cc *grpc.ClientConn) HandlerClient {
	return &handlerClient{cc}
}

func (c *handlerClient) Handle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*HandleResult, error) {
	out := new(HandleResult)
	err := c.cc.Invoke(ctx, "/proto.Handler/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlerClient) ShouldHandle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*WillHandle, error) {
	out := new(WillHandle)
	err := c.cc.Invoke(ctx, "/proto.Handler/ShouldHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandlerServer is the server API for Handler service.
type HandlerServer interface {
	Handle(context.Context, *HTTPRequest) (*HandleResult, error)
	ShouldHandle(context.Context, *HTTPRequest) (*WillHandle, error)
}

// UnimplementedHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedHandlerServer struct {
}

func (*UnimplementedHandlerServer) Handle(ctx context.Context, req *HTTPRequest) (*HandleResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handle not implemented")
}
func (*UnimplementedHandlerServer) ShouldHandle(ctx context.Context, req *HTTPRequest) (*WillHandle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShouldHandle not implemented")
}

func RegisterHandlerServer(s *grpc.Server, srv HandlerServer) {
	s.RegisterService(&_Handler_serviceDesc, srv)
}

func _Handler_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HTTPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlerServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Handler/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlerServer).Handle(ctx, req.(*HTTPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handler_ShouldHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HTTPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlerServer).ShouldHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Handler/ShouldHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlerServer).ShouldHandle(ctx, req.(*HTTPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Handler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Handler",
	HandlerType: (*HandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handle",
			Handler:    _Handler_Handle_Handler,
		},
		{
			MethodName: "ShouldHandle",
			Handler:    _Handler_ShouldHandle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "handler.proto",
}
