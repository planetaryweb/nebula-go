// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handler.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type FileContents struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Contents             []byte   `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileContents) Reset()         { *m = FileContents{} }
func (m *FileContents) String() string { return proto.CompactTextString(m) }
func (*FileContents) ProtoMessage()    {}
func (*FileContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{2}
}

func (m *FileContents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileContents.Unmarshal(m, b)
}
func (m *FileContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileContents.Marshal(b, m, deterministic)
}
func (m *FileContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileContents.Merge(m, src)
}
func (m *FileContents) XXX_Size() int {
	return xxx_messageInfo_FileContents.Size(m)
}
func (m *FileContents) XXX_DiscardUnknown() {
	xxx_messageInfo_FileContents.DiscardUnknown(m)
}

var xxx_messageInfo_FileContents proto.InternalMessageInfo

func (m *FileContents) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileContents) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileContents) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type FormValue struct {
	// Types that are valid to be assigned to Value:
	//	*FormValue_Str
	//	*FormValue_File
	Value                isFormValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FormValue) Reset()         { *m = FormValue{} }
func (m *FormValue) String() string { return proto.CompactTextString(m) }
func (*FormValue) ProtoMessage()    {}
func (*FormValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{3}
}

func (m *FormValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormValue.Unmarshal(m, b)
}
func (m *FormValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormValue.Marshal(b, m, deterministic)
}
func (m *FormValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormValue.Merge(m, src)
}
func (m *FormValue) XXX_Size() int {
	return xxx_messageInfo_FormValue.Size(m)
}
func (m *FormValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FormValue.DiscardUnknown(m)
}

var xxx_messageInfo_FormValue proto.InternalMessageInfo

type isFormValue_Value interface {
	isFormValue_Value()
}

type FormValue_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type FormValue_File struct {
	File *FileContents `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

func (*FormValue_Str) isFormValue_Value() {}

func (*FormValue_File) isFormValue_Value() {}

func (m *FormValue) GetValue() isFormValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FormValue) GetStr() string {
	if x, ok := m.GetValue().(*FormValue_Str); ok {
		return x.Str
	}
	return ""
}

func (m *FormValue) GetFile() *FileContents {
	if x, ok := m.GetValue().(*FormValue_File); ok {
		return x.File
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FormValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FormValue_Str)(nil),
		(*FormValue_File)(nil),
	}
}

type FormValues struct {
	Values               []*FormValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FormValues) Reset()         { *m = FormValues{} }
func (m *FormValues) String() string { return proto.CompactTextString(m) }
func (*FormValues) ProtoMessage()    {}
func (*FormValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{4}
}

func (m *FormValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormValues.Unmarshal(m, b)
}
func (m *FormValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormValues.Marshal(b, m, deterministic)
}
func (m *FormValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormValues.Merge(m, src)
}
func (m *FormValues) XXX_Size() int {
	return xxx_messageInfo_FormValues.Size(m)
}
func (m *FormValues) XXX_DiscardUnknown() {
	xxx_messageInfo_FormValues.DiscardUnknown(m)
}

var xxx_messageInfo_FormValues proto.InternalMessageInfo

func (m *FormValues) GetValues() []*FormValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type HandlerName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandlerName) Reset()         { *m = HandlerName{} }
func (m *HandlerName) String() string { return proto.CompactTextString(m) }
func (*HandlerName) ProtoMessage()    {}
func (*HandlerName) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{5}
}

func (m *HandlerName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandlerName.Unmarshal(m, b)
}
func (m *HandlerName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandlerName.Marshal(b, m, deterministic)
}
func (m *HandlerName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandlerName.Merge(m, src)
}
func (m *HandlerName) XXX_Size() int {
	return xxx_messageInfo_HandlerName.Size(m)
}
func (m *HandlerName) XXX_DiscardUnknown() {
	xxx_messageInfo_HandlerName.DiscardUnknown(m)
}

var xxx_messageInfo_HandlerName proto.InternalMessageInfo

func (m *HandlerName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HTTPStatus struct {
	Status               uint32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPStatus) Reset()         { *m = HTTPStatus{} }
func (m *HTTPStatus) String() string { return proto.CompactTextString(m) }
func (*HTTPStatus) ProtoMessage()    {}
func (*HTTPStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{6}
}

func (m *HTTPStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPStatus.Unmarshal(m, b)
}
func (m *HTTPStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPStatus.Marshal(b, m, deterministic)
}
func (m *HTTPStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPStatus.Merge(m, src)
}
func (m *HTTPStatus) XXX_Size() int {
	return xxx_messageInfo_HTTPStatus.Size(m)
}
func (m *HTTPStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPStatus proto.InternalMessageInfo

func (m *HTTPStatus) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HTTPStatus) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HTTPRequest struct {
	Form                 map[string]*FormValues `protobuf:"bytes,3,rep,name=form,proto3" json:"form,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Headers              map[string]*Header     `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Method               string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HTTPRequest) Reset()         { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()    {}
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{7}
}

func (m *HTTPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPRequest.Unmarshal(m, b)
}
func (m *HTTPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPRequest.Marshal(b, m, deterministic)
}
func (m *HTTPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPRequest.Merge(m, src)
}
func (m *HTTPRequest) XXX_Size() int {
	return xxx_messageInfo_HTTPRequest.Size(m)
}
func (m *HTTPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPRequest proto.InternalMessageInfo

func (m *HTTPRequest) GetForm() map[string]*FormValues {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *HTTPRequest) GetHeaders() map[string]*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HTTPRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HTTPRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Header struct {
	All                  []string `protobuf:"bytes,1,rep,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{8}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetAll() []string {
	if m != nil {
		return m.All
	}
	return nil
}

type WillHandle struct {
	Handle               bool        `protobuf:"varint,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Status               *HTTPStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WillHandle) Reset()         { *m = WillHandle{} }
func (m *WillHandle) String() string { return proto.CompactTextString(m) }
func (*WillHandle) ProtoMessage()    {}
func (*WillHandle) Descriptor() ([]byte, []int) {
	return fileDescriptor_515968b8e1a22554, []int{9}
}

func (m *WillHandle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WillHandle.Unmarshal(m, b)
}
func (m *WillHandle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WillHandle.Marshal(b, m, deterministic)
}
func (m *WillHandle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WillHandle.Merge(m, src)
}
func (m *WillHandle) XXX_Size() int {
	return xxx_messageInfo_WillHandle.Size(m)
}
func (m *WillHandle) XXX_DiscardUnknown() {
	xxx_messageInfo_WillHandle.DiscardUnknown(m)
}

var xxx_messageInfo_WillHandle proto.InternalMessageInfo

func (m *WillHandle) GetHandle() bool {
	if m != nil {
		return m.Handle
	}
	return false
}

func (m *WillHandle) GetStatus() *HTTPStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*Error)(nil), "proto.Error")
	proto.RegisterType((*FileContents)(nil), "proto.FileContents")
	proto.RegisterType((*FormValue)(nil), "proto.FormValue")
	proto.RegisterType((*FormValues)(nil), "proto.FormValues")
	proto.RegisterType((*HandlerName)(nil), "proto.HandlerName")
	proto.RegisterType((*HTTPStatus)(nil), "proto.HTTPStatus")
	proto.RegisterType((*HTTPRequest)(nil), "proto.HTTPRequest")
	proto.RegisterMapType((map[string]*FormValues)(nil), "proto.HTTPRequest.FormEntry")
	proto.RegisterMapType((map[string]*Header)(nil), "proto.HTTPRequest.HeadersEntry")
	proto.RegisterType((*Header)(nil), "proto.Header")
	proto.RegisterType((*WillHandle)(nil), "proto.WillHandle")
}

func init() { proto.RegisterFile("handler.proto", fileDescriptor_515968b8e1a22554) }

var fileDescriptor_515968b8e1a22554 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x6d, 0x9a, 0x36, 0x6d, 0xa7, 0xad, 0xb4, 0x18, 0x09, 0x85, 0x80, 0x44, 0x31, 0x07, 0xb2,
	0x97, 0x15, 0x14, 0x89, 0xaf, 0x23, 0xa8, 0xab, 0xc0, 0x01, 0x90, 0xbb, 0x82, 0x03, 0x07, 0x14,
	0xa8, 0x97, 0x56, 0xeb, 0xc4, 0x8b, 0xed, 0x20, 0x95, 0xbf, 0xc6, 0x9f, 0x43, 0x1e, 0xdb, 0x6d,
	0x96, 0xed, 0x61, 0x4f, 0x99, 0xb1, 0xdf, 0x7b, 0x79, 0x33, 0xcf, 0x30, 0x5d, 0x97, 0xf5, 0x4a,
	0x70, 0x75, 0x72, 0xa9, 0xa4, 0x91, 0xa4, 0x8f, 0x1f, 0x3a, 0x80, 0xfe, 0xa2, 0xba, 0x34, 0x5b,
	0x7a, 0x17, 0xfa, 0x0b, 0xa5, 0xa4, 0x22, 0x47, 0x10, 0x57, 0xfa, 0x67, 0x1a, 0xcd, 0xa2, 0x7c,
	0xc4, 0x6c, 0x49, 0xbf, 0xc2, 0xe4, 0x74, 0x23, 0xf8, 0x5b, 0x59, 0x1b, 0x5e, 0x1b, 0x4d, 0xee,
	0xc1, 0xe8, 0x7c, 0x23, 0xf8, 0xb7, 0xba, 0xac, 0xb8, 0xc7, 0x0d, 0xed, 0xc1, 0x87, 0xb2, 0xe2,
	0x84, 0x40, 0x4f, 0x6f, 0xfe, 0xf0, 0xb4, 0x3b, 0x8b, 0xf2, 0x98, 0x61, 0x4d, 0x32, 0x18, 0xfe,
	0xf0, 0xe4, 0x34, 0x9e, 0x45, 0xf9, 0x84, 0xed, 0x7a, 0xba, 0x84, 0xd1, 0xa9, 0x54, 0xd5, 0xe7,
	0x52, 0x34, 0x96, 0x1c, 0x6b, 0xa3, 0x9c, 0x66, 0xd1, 0x61, 0xb6, 0x21, 0xc7, 0xd0, 0xb3, 0xe2,
	0x28, 0x38, 0x9e, 0xdf, 0x76, 0xf6, 0x4f, 0xda, 0x86, 0x8a, 0x0e, 0x43, 0xc8, 0x9b, 0x01, 0xf4,
	0x7f, 0x5b, 0x1d, 0xfa, 0x1c, 0x60, 0x27, 0xaa, 0x49, 0x0e, 0x09, 0x1e, 0xeb, 0x34, 0x9a, 0xc5,
	0xf9, 0x78, 0x7e, 0x14, 0x34, 0x02, 0x84, 0xf9, 0x7b, 0xfa, 0x10, 0xc6, 0x85, 0xdb, 0x52, 0x98,
	0xa5, 0x35, 0x23, 0xd6, 0x56, 0xba, 0x38, 0x3b, 0xfb, 0xb4, 0x34, 0xa5, 0x69, 0x34, 0xb9, 0x03,
	0x89, 0xc6, 0x0a, 0x31, 0x53, 0xe6, 0xbb, 0xb0, 0xc4, 0xee, 0x7e, 0x89, 0x7f, 0xbb, 0x30, 0xb6,
	0x44, 0xc6, 0x7f, 0x35, 0x5c, 0x1b, 0xf2, 0x04, 0x7a, 0xe7, 0x52, 0x55, 0x69, 0x8c, 0x96, 0xee,
	0x7b, 0x4b, 0x2d, 0x04, 0xda, 0x5b, 0xd4, 0x46, 0x6d, 0x19, 0x22, 0xc9, 0x2b, 0x18, 0xac, 0x79,
	0xb9, 0xe2, 0x4a, 0xa7, 0x3d, 0x24, 0x3d, 0x38, 0x40, 0x2a, 0x1c, 0xc2, 0xf1, 0x02, 0xde, 0xda,
	0xac, 0xb8, 0x59, 0xcb, 0x95, 0x1f, 0xc5, 0x77, 0xd6, 0x66, 0xa3, 0x44, 0xb0, 0xd9, 0x28, 0x91,
	0xbd, 0x77, 0x71, 0x20, 0xdf, 0x5e, 0x5f, 0xf0, 0x6d, 0x78, 0x0a, 0x17, 0x7c, 0x4b, 0x1e, 0xfb,
	0x0d, 0xfb, 0x34, 0x6e, 0xfd, 0xbf, 0x49, 0xcd, 0xdc, 0xfd, 0xeb, 0xee, 0xcb, 0x28, 0x7b, 0x07,
	0x93, 0xb6, 0x9d, 0x03, 0x72, 0x8f, 0xae, 0xca, 0x4d, 0xc3, 0x40, 0xc8, 0x6a, 0x49, 0xd1, 0x0c,
	0x12, 0x77, 0x68, 0x45, 0x4a, 0x21, 0x30, 0xc9, 0x11, 0xb3, 0x25, 0xfd, 0x08, 0xf0, 0x65, 0x23,
	0x84, 0x0b, 0xce, 0x8e, 0xea, 0x1e, 0x3a, 0xfe, 0x67, 0xc8, 0x7c, 0x47, 0x8e, 0x77, 0x49, 0x5d,
	0xb5, 0xbe, 0x0f, 0x33, 0x84, 0x37, 0x6f, 0x60, 0xe0, 0x5f, 0x01, 0x79, 0x0a, 0x89, 0xd7, 0x25,
	0xd7, 0x97, 0x9d, 0x5d, 0xd7, 0xa0, 0x1d, 0xf2, 0x02, 0x26, 0xcb, 0xb5, 0x6c, 0xc4, 0xea, 0x06,
	0xc4, 0xbd, 0x6f, 0xda, 0xf9, 0x9e, 0xe0, 0xd9, 0xb3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x27,
	0x32, 0x62, 0x7d, 0xa9, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HandlerClient is the client API for Handler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandlerClient interface {
	Handle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*HTTPStatus, error)
	ShouldHandle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*WillHandle, error)
}

type handlerClient struct {
	cc *grpc.ClientConn
}

func NewHandlerClient(cc *grpc.ClientConn) HandlerClient {
	return &handlerClient{cc}
}

func (c *handlerClient) Handle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*HTTPStatus, error) {
	out := new(HTTPStatus)
	err := c.cc.Invoke(ctx, "/proto.Handler/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handlerClient) ShouldHandle(ctx context.Context, in *HTTPRequest, opts ...grpc.CallOption) (*WillHandle, error) {
	out := new(WillHandle)
	err := c.cc.Invoke(ctx, "/proto.Handler/ShouldHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandlerServer is the server API for Handler service.
type HandlerServer interface {
	Handle(context.Context, *HTTPRequest) (*HTTPStatus, error)
	ShouldHandle(context.Context, *HTTPRequest) (*WillHandle, error)
}

// UnimplementedHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedHandlerServer struct {
}

func (*UnimplementedHandlerServer) Handle(ctx context.Context, req *HTTPRequest) (*HTTPStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handle not implemented")
}
func (*UnimplementedHandlerServer) ShouldHandle(ctx context.Context, req *HTTPRequest) (*WillHandle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShouldHandle not implemented")
}

func RegisterHandlerServer(s *grpc.Server, srv HandlerServer) {
	s.RegisterService(&_Handler_serviceDesc, srv)
}

func _Handler_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HTTPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlerServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Handler/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlerServer).Handle(ctx, req.(*HTTPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Handler_ShouldHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HTTPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandlerServer).ShouldHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Handler/ShouldHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandlerServer).ShouldHandle(ctx, req.(*HTTPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Handler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Handler",
	HandlerType: (*HandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handle",
			Handler:    _Handler_Handle_Handler,
		},
		{
			MethodName: "ShouldHandle",
			Handler:    _Handler_ShouldHandle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "handler.proto",
}
